{"version":3,"sources":["components/education.tsx","components/experience.tsx","components/header.tsx","components/skills.tsx","components/theme-switcher.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["EducationSection","_ref","education","renderedEducation","map","edu","React","createElement","className","key","institute","degree","subDegree","graduationDate","overallGpa","majorGpa","coursework","join","ExperienceSection","experiences","renderedExperiences","experience","company","jobTitle","startDate","endDate","location","bullets","bullet","handleDownloadClick","e","preventDefault","window","print","Header","resumeInfo","links","link","name","href","onClick","url","target","reduce","prev","curr","email","SkillsSection","skills","renderedSkills","skill","items","item","renderSkill","renderedSubskills","subskill","concat","Theme","matchesTheme","theme","toUpperCase","ThemeSwitcher","props","label","currentTheme","LIGHT","eventHandler","event","setThemeFn","DARK","toLowerCase","updateTheme","enabled","role","title","aria-label","tabIndex","onKeyDown","aria-hidden","ThemeSwitcherMode","THEME_SWITCHER_MODE","SWITCHABLE","App","setTheme","useState","localStorage","getItem","useEffect","setItem","matchMedia","matches","document","documentElement","setAttribute","DARK_ONLY","enableThemeSwitcher","ResumeData","info","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53722068.chunk.js","sourcesContent":["import React from 'react';\nimport { Education } from './../models';\n\ninterface EducationProps {\n    education: Education[];\n};\n\nconst EducationSection = ({ education }: EducationProps) => {\n    const renderedEducation = education.map((edu: Education) =>\n        <li className=\"education-item\" key={edu.institute}>\n            <div className=\"summary\">\n                <div className=\"info\">\n                    <h3>{edu.institute}</h3>\n                    <div>{edu.degree}</div>\n                    <div>{edu.subDegree}</div>\n                </div>\n                <div className=\"context\">\n                    <div className=\"when\">\n                        {edu.graduationDate}\n                    </div>\n                    {edu.overallGpa && \n                        <div className=\"gpa\">\n                            GPA: {edu.overallGpa}\n                        </div>\n                    }\n                    {edu.majorGpa && \n                        <div className=\"gpa\">\n                            Major GPA: {edu.majorGpa}\n                        </div>\n                    }\n                </div>\n            </div>\n            <div className=\"coursework\">\n                <span className=\"title\">Related Coursework: </span>{edu.coursework.join(', ')}\n            </div>\n        </li>\n    );\n\n    return (\n        <div className=\"education\">\n            <h2>Education</h2>\n            <ul className=\"education-list\">\n                {renderedEducation}\n            </ul>\n        </div>\n    );\n};\n\nexport default EducationSection;","import React from 'react';\nimport { Experience } from './../models';\n\ninterface ExperienceProps {\n    experiences: Experience[];\n};\n\nconst ExperienceSection = ({ experiences }: ExperienceProps) => {\n    const renderedExperiences = experiences.map((experience: Experience) =>\n        <li className=\"experience-item\" key={experience.company}>\n            <div className=\"summary\">\n                <div className=\"info\">\n                    <h3>{experience.company}</h3>\n                    <h4>{experience.jobTitle}</h4>\n                </div>\n                <div className=\"context\">\n                    <div className=\"when\">\n                        {experience.startDate} &mdash; {experience.endDate}\n                    </div>\n                    <div className=\"where\">\n                        {experience.location}\n                    </div>\n                </div>\n            </div>\n            <ul className=\"details\">\n                {experience.bullets.map((bullet) => {\n                    return <li key={bullet}>{bullet}</li>;\n                })}\n            </ul>\n        </li>\n    );\n\n    return (\n        <div className=\"experience\">\n            <h2>Experience</h2>\n            <ul className=\"experience-list\">\n                {renderedExperiences}\n            </ul>\n        </div>\n    );\n};\n\nexport default ExperienceSection;","import React from 'react';\nimport { ResumeInfo, SocialLink } from './../models';\n\nconst DOWNLOAD_KEYWORD = 'Download';\n\ninterface HeaderProps {\n    resumeInfo: ResumeInfo;\n};\n\nfunction handleDownloadClick(e: Event) {\n    e.preventDefault();\n    window.print();\n}\n\nconst Header = ({ resumeInfo }: HeaderProps) => {\n    const links = resumeInfo.links.map((link: SocialLink) =>\n        <span key={link.name}>\n            {(link.name) === DOWNLOAD_KEYWORD\n                /* intentionally using a href to simplify styling */\n                /* eslint-disable-next-line */\n                ? <a href=\"#\" onClick={handleDownloadClick}>Download</a>\n                : <a href={link.url} target='blank'>{link.name}</a>\n            }\n        </span>\n    ).reduce((prev, curr) => [prev, ' | ', curr]);\n\n    return (\n        <header>\n            <div className=\"name\">\n                <h1>{resumeInfo.name}</h1>\n            </div>\n            <div className=\"links\">\n                <div className=\"email\">\n                    <a href={'mailto:' + resumeInfo.email}>\n                        {resumeInfo.email}\n                    </a>\n                </div>\n                <div className=\"other\">\n                    {links}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { Skill } from './../models';\n\ninterface SkillProps {\n    skills: Skill[];\n};\n\nfunction hasSubskills(input: Skill | string): input is Skill {\n    if ((input as Skill).items) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction renderSkill(skill: Skill | string) {\n    if (hasSubskills(skill)) {\n        const renderedSubskills = skill.items.map(\n            (subskill) => renderSkill(subskill)).join(', ');\n        return skill.name + ` (${renderedSubskills})`;\n    } else {\n        return skill;\n    }\n}\n\nconst SkillsSection = ({ skills }: SkillProps) => {\n    const renderedSkills = skills.map((skill: Skill) =>\n        <div className=\"category\" key={skill.name}>\n            <div className=\"category-name\">\n                <h3>\n                    {skill.name}\n                </h3>\n            </div>\n            <div className=\"skills\">\n                {skill.items.map((item) => renderSkill(item)).join(', ')}\n            </div>\n        </div> \n    );\n\n    return (\n        <div className=\"skills\">\n            <h2>Skills</h2>\n            <div className=\"skills-list\">\n                {renderedSkills}\n            </div>\n        </div>\n    );\n};\n\nexport default SkillsSection;","import React from 'react';\n\nenum Theme {\n    LIGHT,\n    DARK\n}\n\ninterface ThemeSwitcherProps {\n    enabled: boolean,\n    currentTheme: string,\n    setThemeFn: Function;\n}\n\nfunction matchesTheme(key: string, theme: Theme): boolean {\n    return Theme[key.toUpperCase()] === theme;\n}\n\nfunction updateTheme(currentTheme: string, setThemeFn: Function): void {\n    if (matchesTheme(currentTheme, Theme.LIGHT)) {\n        setThemeFn(Theme[Theme.DARK].toLowerCase());\n    } else {\n        setThemeFn(Theme[Theme.LIGHT].toLowerCase());\n    }\n}\n\nconst ThemeSwitcher = (props: ThemeSwitcherProps) => {\n    const currentThemeLightMode = matchesTheme(props.currentTheme, Theme.LIGHT);\n    const label = currentThemeLightMode ? 'Dark Mode' : 'Light Mode';\n    const eventHandler = (event: Event) => {\n        event.preventDefault();\n        updateTheme(props.currentTheme, props.setThemeFn);\n    };\n\n    if (props.enabled) {\n        return (\n            <div\n                className='theme-switcher'\n                role='button' \n                title={label}\n                aria-label={label}\n                tabIndex='0'\n                onClick={eventHandler}\n                onKeyDown={(event: KeyboardEvent) => event.key === 'Enter' ? eventHandler(event) : ''}>\n                <span className='theme-switcher-text' aria-hidden='true'>\n                    <i className='material-icons'>\n                        {matchesTheme(props.currentTheme, Theme.LIGHT) ? 'dark_mode' : 'light_mode'}\n                    </i>\n                </span>\n            </div>\n        );\n    } else {\n        return '';\n    }\n}\n\nexport default ThemeSwitcher;","import React from 'react';\nimport EducationSection from './components/education';\nimport ExperienceSection from './components/experience';\nimport Header from './components/header';\nimport SkillsSection from './components/skills';\nimport ThemeSwitcher from './components/theme-switcher';\nimport ResumeData from './data.json';\nimport './App.css';\n\n/** theme switcher settings */\nenum ThemeSwitcherMode {\n  SWITCHABLE, \n  LIGHT_ONLY, \n  DARK_ONLY \n}\n/* adjust this constant to change theme switcher behavior */\nconst THEME_SWITCHER_MODE: ThemeSwitcherMode = ThemeSwitcherMode.SWITCHABLE;\n\nfunction App() {\n  const [theme, setTheme] = React.useState(\n    localStorage.getItem('theme') || ''\n  );\n  React.useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // set theme to OS preference by default (if one exists)\n  if (theme === '') {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  }\n\n  if (THEME_SWITCHER_MODE === ThemeSwitcherMode.SWITCHABLE) {\n    document.documentElement.setAttribute('data-theme', theme);\n  } else if (THEME_SWITCHER_MODE === ThemeSwitcherMode.DARK_ONLY) {\n    document.documentElement.setAttribute('data-theme', 'dark');\n  }\n\n  const enableThemeSwitcher = THEME_SWITCHER_MODE === ThemeSwitcherMode.SWITCHABLE;\n  return (\n    <div className='App'>\n      <ThemeSwitcher enabled={enableThemeSwitcher} currentTheme={theme} setThemeFn={setTheme}/>\n      <div className=\"Resume\">\n        <Header resumeInfo={ResumeData.info} />\n        <main>\n          <ExperienceSection experiences={ResumeData.experience} />\n          <div className=\"sidebar\">\n            <SkillsSection skills={ResumeData.skills} />\n            <EducationSection education={ResumeData.education} />\n          </div>\n          <div className=\"sidebar\">\n      <a  href=\"https://reactjs.org\" >learn react</a>\n    </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}